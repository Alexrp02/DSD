/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _COMPLEX_CALCULATOR_H_RPCGEN
#define _COMPLEX_CALCULATOR_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


typedef struct {
	u_int vector_operando2_len;
	float *vector_operando2_val;
} vector_operando2;

struct complex_calculator_res2 {
	int errnum;
	union {
		struct {
			u_int res_len;
			float *res_val;
		} res;
	} complex_calculator_res2_u;
};
typedef struct complex_calculator_res2 complex_calculator_res2;

struct calculate_complex_1_argument {
	vector_operando2 arg1;
	char arg2;
	vector_operando2 arg3;
};
typedef struct calculate_complex_1_argument calculate_complex_1_argument;

#define COMPLEX_CALCULATOR 0x20000002
#define CCALVER 1

#if defined(__STDC__) || defined(__cplusplus)
#define CALCULATE_COMPLEX 1
extern  complex_calculator_res2 * calculate_complex_1(vector_operando2 , char , vector_operando2 , CLIENT *);
extern  complex_calculator_res2 * calculate_complex_1_svc(vector_operando2 , char , vector_operando2 , struct svc_req *);
extern int complex_calculator_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define CALCULATE_COMPLEX 1
extern  complex_calculator_res2 * calculate_complex_1();
extern  complex_calculator_res2 * calculate_complex_1_svc();
extern int complex_calculator_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_vector_operando2 (XDR *, vector_operando2*);
extern  bool_t xdr_complex_calculator_res2 (XDR *, complex_calculator_res2*);
extern  bool_t xdr_calculate_complex_1_argument (XDR *, calculate_complex_1_argument*);

#else /* K&R C */
extern bool_t xdr_vector_operando2 ();
extern bool_t xdr_complex_calculator_res2 ();
extern bool_t xdr_calculate_complex_1_argument ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_COMPLEX_CALCULATOR_H_RPCGEN */
